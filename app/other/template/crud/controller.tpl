<?php
namespace {$controller.namespace};

use app\common\controller\ApiBase;
use app\Request;
use hg\apidoc\annotation as Apidoc;
use think\App;

/**
 * @Apidoc\Title("{$form.controller_title}")
 * @Apidoc\Group("{$form.group}")
 */
class {$controller.class_name} extends ApiBase
{
    //不需要登录接口
   protected $noNeedLogin = [];
   protected $table = "{$tables[0].model_name}";


   public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

    }

    /**
    * @Apidoc\Title("查询分页列表")
    * @Apidoc\Author("pengking")
    * @Apidoc\Header(ref="api_login")
    * @Apidoc\Param(ref="pagingParam")
    {foreach $tables[0].datas as $k=>$item}{if '{$item.query}'==true}* @Apidoc\Param("{$item.field}",type="{$item.type}"{if '{$item.not_null}'==true},require=true{/if},desc="{$item.desc}")
    {/if}{/foreach}
    * @Apidoc\Returned("data",type="array",ref="app\api\model\auto\{$tables[0].model_name}\getList",withoutField="{foreach $tables[0].datas as $k=>$item}{if '{$item.list}'!=true}{$item.field},{/if}{/foreach}")
    */
    public function getPageList(){
            $params = request()->param();
            $onfield =[];
            {foreach $tables[0].datas as $k=>$item}{if stripos("{$item.field}","_guid")} $onfield[]="{$item.field}"; //{$item.desc}
            {/if}{/foreach}
            $res = $this->rel_select_list($this->table,$params,'','','',$onfield);
            if(!empty($res->items())){
                return ok_msg('成功',$res);
            }else{
                return  err_msg('暂无数据');
            }
    }

    /**
    * @Apidoc\Title("根据主键查询明细")
    * @Apidoc\Author("pengking")
    * @Apidoc\Header(ref="api_login")
    * @Apidoc\Param("guid", type="string",require=true,desc="guid" )
    * @Apidoc\Returned(ref="app\api\model\auto\{$tables[0].model_name}\getInfoById",withoutField="{foreach $tables[0].datas as $k=>$item}{if '{$item.detail}'!=true}{$item.field},{/if}{/foreach}")
    */
    public function detail(){
        $params = request()->param();
        if(empty($params)){
            return err_msg('查询条件错误');
        }
        $onfield =[];
        {foreach $tables[0].datas as $k=>$item}{if stripos("{$item.field}","_guid")} $onfield[]="{$item.field}"; //{$item.desc}
        {/if}{/foreach}

        $res = $this->rel_select_one($this->table,$params,'','',$onfield);
        if($res){
            return ok_msg('成功',$res);
        }else{
            return err_msg('暂无数据');
        }
    }

    /**
    * @Apidoc\Title("新增")
    * @Apidoc\Author("pengking")
    * @Apidoc\Header(ref="api_login")
    * @Apidoc\Method("POST")
    * @Apidoc\Param (ref="app\api\model\auto\{$tables[0].model_name}\getInfoById",withoutField="{foreach $tables[0].datas as $k=>$item}{if '{$item.add}'!=true}{$item.field},{/if}{/foreach}")
    * @Apidoc\Returned (ref="app\api\model\auto\{$tables[0].model_name}\getInfoById")
    */
    public function add(){
        $params = request()->param();
        $res = $this->api_ins($this->table,$params);
        if($res){
            return ok_msg('成功',$res);
        }else{
            return err_msg('失败');
        }
    }


    /**
    * @Apidoc\Title("编辑")
    * @Apidoc\Author("pengking")
    * @Apidoc\Header(ref="api_login")
    * @Apidoc\Method("PUT")
    * @Apidoc\Param (ref="app\api\model\auto\{$tables[0].model_name}\getInfoById",withoutField="{foreach $tables[0].datas as $k=>$item}{if '{$item.edit}'!=true}{$item.field},{/if}{/foreach}")
    * @Apidoc\Returned (ref="app\api\model\auto\{$tables[0].model_name}\getInfoById")
    */
    public function edit(){
        $params = request()->param();
        //数据验证
        $rule=(['guid' => 'require']);
        $message=(['guid.require' => '唯一值guid不能为空']);
        $this->api_validate($params,$rule,$message);
        $res = $this->api_upd($this->table,$params);
        if($res){
            return ok_msg('成功',$res);
        }else{
            return err_msg('失败');
        }
    }

    /**
    * @Apidoc\Title("删除")
    * @Apidoc\Author("pengking")
    * @Apidoc\Header(ref="api_login")
    * @Apidoc\Method("DELETE")
    * @Apidoc\Param("guid", type="string",require=true,desc="guid" )
    * @Apidoc\Returned("data",type="boolean",desc="删除状态")
    */
    public function delete(){
        $params = request()->param();
        //数据验证
        $rule=(['guid' => 'require']);
        $message=(['guid.require' => '唯一值guid不能为空']);
        $this->api_validate($params,$rule,$message);
        $res = $this->api_del($this->table,$params);
        if ($res) {
            return ok_msg('成功', $res);
        } else {
            return err_msg('失败');
        }
    }


}

