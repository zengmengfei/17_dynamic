<?php namespace app\admin\model;

use think\facade\Db;

/**
 * 活动-模型
 * @author PENGKING
 * @since: 2022/10/13
 * Class Activity
 * @package app\admin\model
 */
class Activity extends BaseModel
{
// 设置数据表名
    protected $name = "activity";

    protected $append = ['activity_type_str', 'organizer_type_str', 'team_type_str', 'ac_status', 'ac_status_str'];


    const AC_STATUS_ARR = [
        10 => '未开始',
        20 => '活动中',
        30 => '已完成',
        40 => '已取消',
    ];

    const CADTARR = [
        10 => '活动前2小时',
//      20 => '活动前6小时',
//      30 => '活动前1天',
    ];

    const ACTIVITY_TYPE_ARR = [
        10 => '运动健身', 20 => '户外出行', 30 => '单身交友', 40 => '生活学习'
    ];

    const ORGANIZER_TYPE_ARR = [
        10 => '个人', 20 => '俱乐部'
    ];

    const TEAM_TYPE_ARR = [
        10 => '线上分队', 20 => '线下分队'
    ];

    /**
     * 获取缓存信息
     * @param int $id 记录ID
     * @return \app\common\model\数据信息|mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @author PENGKING
     * @since: 2022/10/13
     */
    public function getInfo($id)
    {
        $info = parent::getInfo($id); // TODO: Change the autogenerated stub
//        if ($info) {
//
//        }
        return $info;
    }

    /**
     * 获取缓存信息
     * @author PENGKING
     * @since: 2022/10/13
     */
    public function getInfoBySn($activity_sn)
    {
        $info = self::where(['activity_sn' => $activity_sn, 'mark' => 1])->find();
        return $info;
    }

    public function getCoverImgsAttr($value)
    {
        if (!$value) return $value;
        $value = explode(',', $value);
        $data = [];
        foreach ($value as $item) {
            $data[] = get_image_url($item);
        }
        return $data;
    }

    public function setCoverImgsAttr($value)
    {
        return ($value && is_array($value))?implode(',',$value):$value;
    }


    public function getActivityTypeStrAttr() {
        return self::ACTIVITY_TYPE_ARR[$this->activity_type] ?? '';
    }

    public function getOrganizerTypeStrAttr() {
        return self::ORGANIZER_TYPE_ARR[$this->organizer_type] ?? '';
    }

    public function getTeamTypeStrAttr() {
        return self::TEAM_TYPE_ARR[$this->team_type] ?? '';
    }

    // 添加活动状态
    public function getAcStatusAttr() {
        if ($this->status == 30) {
            // 活动取消
            $ac_status = 40;
        } elseif (time() < strtotime($this->activity_starttime)) {
            // 活动未开始
            $ac_status = 10;
        } elseif (time() >= strtotime($this->activity_endtime)) {
            // 活动未开始
            $ac_status = 30;
        } else {
            // 活动进行中
            $ac_status = 20;
        }
        return self::AC_STATUS_ARR[$ac_status];
    }


    public function getAcStatusStrAttr() {
        if ($this->status == 30) {
            // 活动取消
            $ac_status = 40;
        } elseif (time() < strtotime($this->activity_starttime)) {
            // 活动未开始
            $ac_status = 10;
        } elseif (time() >= strtotime($this->activity_endtime)) {
            // 活动未开始
            $ac_status = 30;
        } else {
            // 活动进行中
            $ac_status = 20;
        }
        return $ac_status;
    }
}