<?php namespace app\admin\service;


use app\admin\model\Activity;

/**
* 活动管理-服务类
* @author PENGKING
* @since: 2022/10/09
* Class ActivityService
* @package app\admin\service
*/
class ActivityService extends BaseService
{
/**
* 构造函数
* LevelService constructor.
*/
public function __construct()
{
$this->model = new Activity();
}

/**
* 获取数据列表
* @return array
* @since 2022/10/09
* @author PENGKING
*/
public function getList()
{
$param = request()->param();

// 查询条件
$map = [];

    
        // 活动标题
        $title = isset($param['title']) ? trim($param['title']) : '';
        if ($title) {
        $map[] = ['title', 'like', "%{$title}%"];
        }
        
        // 取消截止时间类型 10
        $cancel_apply_deadline_type = isset($param['cancel_apply_deadline_type']) ? (int)$param['cancel_apply_deadline_type'] : 0;
        if ($cancel_apply_deadline_type) {
        $map[] = ['cancel_apply_deadline_type', '=', $cancel_apply_deadline_type];
        }
        
        // 男参与最低级别 0
        $male_min_level = isset($param['male_min_level']) ? (int)$param['male_min_level'] : 0;
        if ($male_min_level) {
        $map[] = ['male_min_level', '=', $male_min_level];
        }
        
        // 男参与最高级别 0
        $male_max_level = isset($param['male_max_level']) ? (int)$param['male_max_level'] : 0;
        if ($male_max_level) {
        $map[] = ['male_max_level', '=', $male_max_level];
        }
        
        // 女参与最低级别 0
        $female_min_level = isset($param['female_min_level']) ? (int)$param['female_min_level'] : 0;
        if ($female_min_level) {
        $map[] = ['female_min_level', '=', $female_min_level];
        }
        
        // 女参与最高级别 0
        $female_max_level = isset($param['female_max_level']) ? (int)$param['female_max_level'] : 0;
        if ($female_max_level) {
        $map[] = ['female_max_level', '=', $female_max_level];
        }
        
        // 组织者类型 10
        $organizer_type = isset($param['organizer_type']) ? (int)$param['organizer_type'] : 0;
        if ($organizer_type) {
        $map[] = ['organizer_type', '=', $organizer_type];
        }
        
        // 是否分队 10
        $is_team_part = isset($param['is_team_part']) ? (int)$param['is_team_part'] : 0;
        if ($is_team_part) {
        $map[] = ['is_team_part', '=', $is_team_part];
        }
    
return parent::getList($map); // TODO: Change the autogenerated stub
}

    /**
    * 添加或编辑
    * @return array
    * @since 2022/10/09
    * @author PENGKING
    */
    public function edit()
    {
    // 参数
    $data = request()->param();
                                                            
            // 封面图处理
            $cover_imgs = getter($data, 'cover_imgs');
            if (!empty($cover_imgs)) {
            if (strpos($cover_imgs, "temp") !== false) {
            $data['cover_imgs'] = save_image($cover_imgs, 'activity');
            } else {
            $data['cover_imgs'] = str_replace(IMG_URL, "", $cover_imgs);
            }
            }
                                                                                                                                                                                                                                                                                                                                                                                                            
    return parent::edit($data); // TODO: Change the autogenerated stub
    }

                                                                                                                                                                                                                                                                                                
                /**
                * 设置是否分队 10
                * @return array
                * @throws \think\db\exception\BindParamException
                * @throws \think\exception\PDOException
                * @since 2022/10/09
                * @author PENGKING
                */
                public function setIsTeamPart()
                {
                // 参数
                $data = request()->param();
                $id = getter($data, "id", 0);
                if (!$id) {
                return message('记录ID不能为空', false);
                }
                $is_team_part = getter($data, "is_team_part", 0);
                if (!$is_team_part) {
                return message('记录是否分队 10不能为空', false);
                }
                $error = '';
                $item = [
                'id' => $id,
                'is_team_part' => $is_team_part                ];
                $rowId = $this->model->edit($item, $error);
                if (!$rowId) {
                return message($error, false);
                }
                return message();
                }
                                                                                                                                                                                                
/**
* 获取数据列表
* @return array
* @since 2022/10/09* @author PENGKING*/
public function getListSelect()
{
return parent::getListSelect();
}

}