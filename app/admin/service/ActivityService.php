<?php namespace app\admin\service;


use app\admin\model\Activity;

/**
* 活动管理-服务类
* @author PENGKING
* @since: 2022/10/13
* Class ActivityService
* @package app\admin\service
*/
class ActivityService extends BaseService
{
/**
* 构造函数
* LevelService constructor.
*/
public function __construct()
{
$this->model = new Activity();
}

/**
* 获取数据列表
* @return array
* @since 2022/10/13
* @author PENGKING
*/
public function getList()
{
$param = request()->param();

// 查询条件
$map = [];

    
        // 活动类型
        $activity_type = isset($param['activity_type']) ? (int)$param['activity_type'] : 0;
        if ($activity_type) {
        $map[] = ['activity_type', '=', $activity_type];
        }
        
        // 活动标题
        $title = isset($param['title']) ? trim($param['title']) : '';
        if ($title) {
        $map[] = ['title', 'like', "%{$title}%"];
        }
        
        // 取消报名截止时间类型: 10
        $cancel_apply_deadline_type = isset($param['cancel_apply_deadline_type']) ? (int)$param['cancel_apply_deadline_type'] : 0;
        if ($cancel_apply_deadline_type) {
        $map[] = ['cancel_apply_deadline_type', '=', $cancel_apply_deadline_type];
        }
        
        // 男参与最低级别
        $male_min_level = isset($param['male_min_level']) ? (int)$param['male_min_level'] : 0;
        if ($male_min_level) {
        $map[] = ['male_min_level', '=', $male_min_level];
        }
        
        // 男参与最高级别
        $male_max_level = isset($param['male_max_level']) ? (int)$param['male_max_level'] : 0;
        if ($male_max_level) {
        $map[] = ['male_max_level', '=', $male_max_level];
        }
        
        // 女参与最低级别
        $female_min_level = isset($param['female_min_level']) ? (int)$param['female_min_level'] : 0;
        if ($female_min_level) {
        $map[] = ['female_min_level', '=', $female_min_level];
        }
        
        // 女参与最高级别
        $female_max_level = isset($param['female_max_level']) ? (int)$param['female_max_level'] : 0;
        if ($female_max_level) {
        $map[] = ['female_max_level', '=', $female_max_level];
        }
        
        // 组织者类型: 10
        $organizer_type = isset($param['organizer_type']) ? (int)$param['organizer_type'] : 0;
        if ($organizer_type) {
        $map[] = ['organizer_type', '=', $organizer_type];
        }
        
        // 是否分队: 10
        $team_type = isset($param['team_type']) ? (int)$param['team_type'] : 0;
        if ($team_type) {
        $map[] = ['team_type', '=', $team_type];
        }
        
        // 活动状态
        $status = isset($param['status']) ? (int)$param['status'] : 0;
        if ($status) {
        $map[] = ['status', '=', $status];
        }
    
return parent::getList($map); // TODO: Change the autogenerated stub
}

    /**
    * 添加或编辑
    * @return array
    * @since 2022/10/13
    * @author PENGKING
    */
    public function edit()
    {
    // 参数
    $data = request()->param();
                                                                                    
            // 封面图处理
            $cover_imgs = getter($data, 'cover_imgs');
            if (!empty($cover_imgs)) {
            if (strpos($cover_imgs, "temp") !== false) {
            $data['cover_imgs'] = save_image($cover_imgs, 'activity');
            } else {
            $data['cover_imgs'] = str_replace(IMG_URL, "", $cover_imgs);
            }
            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            
    return parent::edit($data); // TODO: Change the autogenerated stub
    }


/**
* 获取数据列表
* @return array
* @since 2022/10/13* @author PENGKING*/
public function getListSelect()
{
return parent::getListSelect();
}

}